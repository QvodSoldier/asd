// Code generated by protoc-gen-go. DO NOT EDIT.
// source: asd.proto

package asdagent

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DebugRequest struct {
	TargetPodUUID               string   `protobuf:"bytes,1,opt,name=TargetPodUUID,proto3" json:"TargetPodUUID,omitempty"`
	TargetContainerID           string   `protobuf:"bytes,2,opt,name=TargetContainerID,proto3" json:"TargetContainerID,omitempty"`
	TargetDebugToolsPodUUID     string   `protobuf:"bytes,3,opt,name=TargetDebugToolsPodUUID,proto3" json:"TargetDebugToolsPodUUID,omitempty"`
	TargetDebugToolsContainerID string   `protobuf:"bytes,4,opt,name=TargetDebugToolsContainerID,proto3" json:"TargetDebugToolsContainerID,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *DebugRequest) Reset()         { *m = DebugRequest{} }
func (m *DebugRequest) String() string { return proto.CompactTextString(m) }
func (*DebugRequest) ProtoMessage()    {}
func (*DebugRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4749e7f67536c20, []int{0}
}

func (m *DebugRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugRequest.Unmarshal(m, b)
}
func (m *DebugRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugRequest.Marshal(b, m, deterministic)
}
func (m *DebugRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugRequest.Merge(m, src)
}
func (m *DebugRequest) XXX_Size() int {
	return xxx_messageInfo_DebugRequest.Size(m)
}
func (m *DebugRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DebugRequest proto.InternalMessageInfo

func (m *DebugRequest) GetTargetPodUUID() string {
	if m != nil {
		return m.TargetPodUUID
	}
	return ""
}

func (m *DebugRequest) GetTargetContainerID() string {
	if m != nil {
		return m.TargetContainerID
	}
	return ""
}

func (m *DebugRequest) GetTargetDebugToolsPodUUID() string {
	if m != nil {
		return m.TargetDebugToolsPodUUID
	}
	return ""
}

func (m *DebugRequest) GetTargetDebugToolsContainerID() string {
	if m != nil {
		return m.TargetDebugToolsContainerID
	}
	return ""
}

type DebugResult struct {
	Pid                  string   `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Dtpid                string   `protobuf:"bytes,2,opt,name=dtpid,proto3" json:"dtpid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugResult) Reset()         { *m = DebugResult{} }
func (m *DebugResult) String() string { return proto.CompactTextString(m) }
func (*DebugResult) ProtoMessage()    {}
func (*DebugResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4749e7f67536c20, []int{1}
}

func (m *DebugResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugResult.Unmarshal(m, b)
}
func (m *DebugResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugResult.Marshal(b, m, deterministic)
}
func (m *DebugResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugResult.Merge(m, src)
}
func (m *DebugResult) XXX_Size() int {
	return xxx_messageInfo_DebugResult.Size(m)
}
func (m *DebugResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugResult.DiscardUnknown(m)
}

var xxx_messageInfo_DebugResult proto.InternalMessageInfo

func (m *DebugResult) GetPid() string {
	if m != nil {
		return m.Pid
	}
	return ""
}

func (m *DebugResult) GetDtpid() string {
	if m != nil {
		return m.Dtpid
	}
	return ""
}

func init() {
	proto.RegisterType((*DebugRequest)(nil), "asdagent.DebugRequest")
	proto.RegisterType((*DebugResult)(nil), "asdagent.DebugResult")
}

func init() { proto.RegisterFile("asd.proto", fileDescriptor_a4749e7f67536c20) }

var fileDescriptor_a4749e7f67536c20 = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0x4e, 0xd1,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x48, 0x2c, 0x4e, 0x49, 0x4c, 0x4f, 0xcd, 0x2b, 0x51,
	0xba, 0xc7, 0xc8, 0xc5, 0xe3, 0x92, 0x9a, 0x54, 0x9a, 0x1e, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c,
	0x22, 0xa4, 0xc2, 0xc5, 0x1b, 0x92, 0x58, 0x94, 0x9e, 0x5a, 0x12, 0x90, 0x9f, 0x12, 0x1a, 0xea,
	0xe9, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0x84, 0x2a, 0x28, 0xa4, 0xc3, 0x25, 0x08, 0x11,
	0x70, 0xce, 0xcf, 0x2b, 0x49, 0xcc, 0xcc, 0x4b, 0x2d, 0xf2, 0x74, 0x91, 0x60, 0x02, 0xab, 0xc4,
	0x94, 0x10, 0xb2, 0xe0, 0x12, 0x87, 0x08, 0x82, 0x6d, 0x0a, 0xc9, 0xcf, 0xcf, 0x29, 0x86, 0x99,
	0xce, 0x0c, 0xd6, 0x83, 0x4b, 0x5a, 0xc8, 0x81, 0x4b, 0x1a, 0x5d, 0x0a, 0xd9, 0x46, 0x16, 0xb0,
	0x6e, 0x7c, 0x4a, 0x94, 0x4c, 0xb9, 0xb8, 0xa1, 0xfe, 0x2b, 0x2e, 0xcd, 0x29, 0x11, 0x12, 0xe0,
	0x62, 0x2e, 0xc8, 0x4c, 0x81, 0x7a, 0x0a, 0xc4, 0x14, 0x12, 0xe1, 0x62, 0x4d, 0x29, 0x01, 0x89,
	0x41, 0x9c, 0x0f, 0xe1, 0x18, 0x39, 0x72, 0xb1, 0x82, 0xb5, 0x09, 0x59, 0xc0, 0x18, 0x62, 0x7a,
	0xb0, 0x40, 0xd3, 0x43, 0x0e, 0x30, 0x29, 0x51, 0x0c, 0x71, 0x90, 0x45, 0x4a, 0x0c, 0x49, 0x6c,
	0xe0, 0xb0, 0x36, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x06, 0x55, 0xe1, 0x57, 0x78, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DebugClient is the client API for Debug service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DebugClient interface {
	Debug(ctx context.Context, in *DebugRequest, opts ...grpc.CallOption) (*DebugResult, error)
}

type debugClient struct {
	cc *grpc.ClientConn
}

func NewDebugClient(cc *grpc.ClientConn) DebugClient {
	return &debugClient{cc}
}

func (c *debugClient) Debug(ctx context.Context, in *DebugRequest, opts ...grpc.CallOption) (*DebugResult, error) {
	out := new(DebugResult)
	err := c.cc.Invoke(ctx, "/asdagent.Debug/Debug", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DebugServer is the server API for Debug service.
type DebugServer interface {
	Debug(context.Context, *DebugRequest) (*DebugResult, error)
}

// UnimplementedDebugServer can be embedded to have forward compatible implementations.
type UnimplementedDebugServer struct {
}

func (*UnimplementedDebugServer) Debug(ctx context.Context, req *DebugRequest) (*DebugResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Debug not implemented")
}

func RegisterDebugServer(s *grpc.Server, srv DebugServer) {
	s.RegisterService(&_Debug_serviceDesc, srv)
}

func _Debug_Debug_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DebugRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugServer).Debug(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/asdagent.Debug/Debug",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugServer).Debug(ctx, req.(*DebugRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Debug_serviceDesc = grpc.ServiceDesc{
	ServiceName: "asdagent.Debug",
	HandlerType: (*DebugServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Debug",
			Handler:    _Debug_Debug_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "asd.proto",
}
